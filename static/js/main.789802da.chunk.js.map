{"version":3,"sources":["components/Card/Card.jsx","components/Card/CardContainer.js","actions/index.js","components/Adder/CardAdder.jsx","components/Column/Column.jsx","components/Column/ColumnContainer.js","components/Adder/ColumnAdder.jsx","components/Board/Board.jsx","components/Board/BoardContainer.js","components/App.js","reducers/index.js","reducers/cards.js","reducers/columns.js","store/index.js","index.js"],"names":["Card","card","index","draggableId","id","provided","className","draggableProps","dragHandleProps","ref","innerRef","text","connect","state","ownProps","cards","byId","cardId","nextId","columnId","dispatch","useState","setText","open","setOpen","box","useRef","textareaEl","handleClickOutside","e","current","contains","target","useEffect","focus","document","addEventListener","removeEventListener","action","onSubmit","preventDefault","trim","cardText","type","addCard","value","rows","onChange","style","height","scrollHeight","placeholder","required","onClick","Column","column","node","maxScrollTop","clientHeight","scrollTop","title","droppableId","String","droppableProps","map","CardContainer","key","columns","setTitle","inputEl","columnTitle","columnCards","Board","columnsId","onDragEnd","ColumnContainer","allIds","result","destination","source","moveCard","App","BoardContainer","combineReducers","sourceColumn","destinationColumn","newCardIds","slice","splice","sourceCardIds","destinationCardIds","store","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.789802da.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Draggable } from 'react-beautiful-dnd'\r\nimport './style.css'\r\n\r\nconst Card = ({ card, index }) => (\r\n  <Draggable draggableId={card.id} index={index}>\r\n    {provided => (\r\n      <div\r\n        className=\"card\"\r\n        {...provided.draggableProps}\r\n        {...provided.dragHandleProps}\r\n        ref={provided.innerRef}\r\n      >\r\n        {card.text}\r\n      </div>\r\n    )}\r\n  </Draggable>\r\n)\r\n\r\nexport default Card\r\n","import { connect } from 'react-redux'\nimport Card from './Card'\n\nconst mapStateToProps = (state, ownProps) => ({\n  card: state.cards.byId[ownProps.cardId],\n})\n\nexport default connect(mapStateToProps)(Card)\n","export const ADD_COLUMN = 'ADD_COLUMN'\r\nexport const ADD_CARD = 'ADD_CARD'\r\nexport const MOVE_CARD = 'MOVE_CARD'\r\n\r\nlet nextId = 0\r\nexport const addColumn = columnTitle => ({\r\n  type: ADD_COLUMN,\r\n  columnId: `column_${nextId++}`,\r\n  columnTitle,\r\n  columnCards: [],\r\n})\r\n\r\nexport const addCard = (cardText, columnId) => ({\r\n  type: ADD_CARD,\r\n  cardId: `card_${nextId++}`,\r\n  cardText,\r\n  columnId,\r\n})\r\n\r\nexport const moveCard = (source, destination, draggableId) => ({\r\n  type: MOVE_CARD,\r\n  source,\r\n  destination,\r\n  draggableId,\r\n})\r\n","import React, { useEffect, useState, useRef } from 'react'\nimport { connect } from 'react-redux'\nimport { addCard } from '../../actions'\nimport './style.css'\n\nconst CardAdder = ({ columnId, dispatch }) => {\n  const [text, setText] = useState('')\n  const [open, setOpen] = useState(false)\n  const box = useRef()\n  const textareaEl = useRef()\n\n  const handleClickOutside = e => {\n    if (box.current.contains(e.target)) {\n      // inside click\n      return\n    }\n    // outside click\n    setOpen(false)\n  }\n\n  const handleChange = e => {\n    setText(e.target.value)\n    textareaEl.current.style.height = 'inherit'\n    textareaEl.current.style.height = `${e.target.scrollHeight}px`\n  }\n  const handleClose = () => {\n    setOpen(false)\n    setText('')\n  }\n\n  const onSubmitTask = e => {\n    e.preventDefault()\n    if (!text.trim()) {\n      return\n    }\n    dispatch(addCard(text, columnId))\n    setText('')\n    setOpen(false)\n  }\n\n  useEffect(() => {\n    if (open) {\n      textareaEl.current.focus()\n      document.addEventListener('mousedown', handleClickOutside)\n    } else {\n      document.removeEventListener('mousedown', handleClickOutside)\n    }\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside)\n    }\n  }, [open])\n\n  return (\n    <div className=\"add-block\" ref={box}>\n      {open ? (\n        <form action=\"\" onSubmit={onSubmitTask}>\n          <textarea\n            ref={textareaEl}\n            className=\"add-block__textarea\"\n            value={text}\n            rows=\"1\"\n            onChange={handleChange}\n            placeholder=\"Введите название карточки\"\n            required\n          />\n          <div className=\"add-block__controls\">\n            <button className=\"add-block__submit\" type=\"submit\">\n              Добавить карточку\n            </button>\n            <button className=\"add-block__cancel\" onClick={handleClose} />\n          </div>\n        </form>\n      ) : (\n        <button className=\"add-block__btn\" onClick={() => setOpen(true)}>\n          Добавить еще одну карточку\n        </button>\n      )}\n    </div>\n  )\n}\n\nexport default connect()(CardAdder)\n","import React, { useRef, useEffect } from 'react'\nimport { Droppable } from 'react-beautiful-dnd'\nimport CardContainer from '../Card/CardContainer'\nimport CardAdder from '../Adder/CardAdder'\nimport './style.css'\n\nconst Column = ({ column }) => {\n  const node = useRef()\n  useEffect(() => {\n    const { scrollHeight, clientHeight } = node.current\n    const maxScrollTop = scrollHeight - clientHeight\n    node.current.scrollTop = maxScrollTop > 0 ? maxScrollTop : 0\n  })\n  return (\n    <div className=\"column\">\n      <div className=\"column__title\">{column.title}</div>\n      <div className=\"column__content\" ref={node}>\n        <Droppable droppableId={String(column.id)}>\n          {provided => (\n            <div\n              className=\"column__inner\"\n              ref={provided.innerRef}\n              {...provided.droppableProps}\n            >\n              {column.cards.map((cardId, index) => (\n                <CardContainer key={cardId} cardId={cardId} index={index} />\n              ))}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </div>\n\n      <CardAdder columnId={column.id} />\n    </div>\n  )\n}\n\nexport default Column\n","import { connect } from 'react-redux'\nimport Column from './Column'\n\nconst mapStateToProps = (state, ownProps) => ({\n  column: state.columns.byId[ownProps.columnId],\n  index: ownProps.index,\n})\n\nexport default connect(mapStateToProps)(Column)\n","import React, { useEffect, useState, useRef } from 'react'\nimport { connect } from 'react-redux'\nimport { addColumn } from '../../actions'\nimport './style.css'\n\nconst ColumnAdder = ({ dispatch }) => {\n  const [title, setTitle] = useState('')\n  const [open, setOpen] = useState(false)\n  const box = useRef()\n  const inputEl = useRef()\n\n  const handleClickOutside = e => {\n    if (box.current.contains(e.target)) {\n      // inside click\n      return\n    }\n    // outside click\n    setOpen(false)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n    setTitle('')\n  }\n\n  useEffect(() => {\n    if (open) {\n      inputEl.current.focus()\n      document.addEventListener('mousedown', handleClickOutside)\n    } else {\n      document.removeEventListener('mousedown', handleClickOutside)\n    }\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside)\n    }\n  }, [open])\n\n  const handleChange = e => {\n    setTitle(e.target.value)\n  }\n  const onSubmitColumn = e => {\n    e.preventDefault()\n    if (!title.trim()) {\n      return\n    }\n    dispatch(addColumn(title))\n    setTitle('')\n    setOpen(false)\n  }\n\n  return (\n    <div className=\"column column_adder add-block\" ref={box}>\n      {open ? (\n        <form action=\"\" onSubmit={onSubmitColumn}>\n          <input\n            className=\"add-block__input\"\n            value={title}\n            ref={inputEl}\n            onChange={handleChange}\n            placeholder=\"Введите название колонки\"\n            required\n          />\n\n          <div className=\"add-block__controls\">\n            <button className=\"add-block__submit\" type=\"submit\">\n              Добавить колонку\n            </button>\n            <button className=\"add-block__cancel\" onClick={handleClose} />\n          </div>\n        </form>\n      ) : (\n        <button className=\"add-block__btn\" onClick={() => setOpen(true)}>\n          Добавить еще одну колонку\n        </button>\n      )}\n    </div>\n  )\n}\n\nexport default connect()(ColumnAdder)\n","import React from 'react'\nimport { DragDropContext } from 'react-beautiful-dnd'\nimport ColumnContainer from '../Column/ColumnContainer'\nimport ColumnAdder from '../Adder/ColumnAdder'\nimport './style.css'\n\nconst Board = ({ columnsId, onDragEnd }) => (\n  <div className=\"board\">\n    <div className=\"board__wrapper\">\n      <DragDropContext onDragEnd={onDragEnd}>\n        {columnsId.map(columnId => (\n          <ColumnContainer key={columnId} columnId={columnId} />\n        ))}\n        <ColumnAdder />\n      </DragDropContext>\n    </div>\n  </div>\n)\n\nexport default Board\n","import { connect } from 'react-redux'\nimport Board from './Board'\nimport { moveCard } from '../../actions'\n\nconst onDragEnd = (result, dispatch) => {\n  const { destination, source, draggableId } = result\n  if (!destination) {\n    return\n  }\n  if (\n    destination.droppableId === source.droppableId &&\n    destination.index === source.index\n  ) {\n    return\n  }\n  dispatch(moveCard(source, destination, draggableId))\n}\n\nconst mapStateToProps = state => ({\n  columnsId: state.columns.allIds,\n})\n\nconst mapDispatchToProps = dispatch => ({\n  onDragEnd: result => onDragEnd(result, dispatch),\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Board)\n","import React from 'react'\nimport BoardContainer from './Board/BoardContainer'\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <BoardContainer />\n    </div>\n  )\n}\n\nexport default App\n","import { combineReducers } from 'redux'\nimport cards from './cards'\nimport columns from './columns'\n\nexport default combineReducers({\n  cards,\n  columns,\n})\n","import { ADD_CARD } from '../actions'\r\n\r\nexport default function cards(state = { byId: {}, allIds: [] }, action) {\r\n  switch (action.type) {\r\n    case ADD_CARD:\r\n      return {\r\n        byId: {\r\n          ...state.byId,\r\n          [action.cardId]: {\r\n            id: action.cardId,\r\n            text: action.cardText,\r\n          },\r\n        },\r\n        allIds: [...state.allIds, action.cardId],\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { ADD_COLUMN, ADD_CARD, MOVE_CARD } from '../actions'\n\nexport default function columns(state = { byId: {}, allIds: [] }, action) {\n  switch (action.type) {\n    case ADD_COLUMN:\n      return {\n        byId: {\n          ...state.byId,\n          [action.columnId]: {\n            id: action.columnId,\n            title: action.columnTitle,\n            cards: action.columnCards,\n          },\n        },\n        allIds: [...state.allIds, action.columnId],\n      }\n    case ADD_CARD:\n      return {\n        ...state,\n        byId: {\n          ...state.byId,\n          [action.columnId]: {\n            ...state.byId[action.columnId],\n            cards: [...state.byId[action.columnId].cards, action.cardId],\n          },\n        },\n      }\n    case MOVE_CARD:\n      const { source, destination, draggableId } = action\n      const sourceColumn = state.byId[source.droppableId]\n      const destinationColumn = state.byId[destination.droppableId]\n      if (sourceColumn === destinationColumn) {\n        const newCardIds = sourceColumn.cards.slice()\n        newCardIds.splice(source.index, 1)\n        newCardIds.splice(destination.index, 0, draggableId)\n        return {\n          ...state,\n          byId: {\n            ...state.byId,\n            [sourceColumn.id]: {\n              ...sourceColumn,\n              cards: newCardIds,\n            },\n          },\n        }\n      }\n      const sourceCardIds = sourceColumn.cards.slice()\n      sourceCardIds.splice(source.index, 1)\n      const destinationCardIds = destinationColumn.cards.slice()\n      destinationCardIds.splice(destination.index, 0, draggableId)\n      return {\n        ...state,\n        byId: {\n          ...state.byId,\n          [sourceColumn.id]: {\n            ...sourceColumn,\n            cards: sourceCardIds,\n          },\n          [destinationColumn.id]: {\n            ...destinationColumn,\n            cards: destinationCardIds,\n          },\n        },\n      }\n    default:\n      return state\n  }\n}\n","import { createStore } from 'redux'\nimport rootReducer from '../reducers'\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport './index.css'\nimport App from './components/App'\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}